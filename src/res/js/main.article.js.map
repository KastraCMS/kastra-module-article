{"version":3,"sources":["components/confirmdialog.jsx","components/loading.jsx","utils.js","views/articles.jsx","components/singleinput.jsx","components/message.jsx","views/article.jsx","routes.js","App.js","serviceWorker.js","index.js"],"names":["ConfirmDialog","props","react_default","a","createElement","className","id","tabIndex","role","aria-labelledby","aria-hidden","title","type","data-dismiss","aria-label","message","onClick","onConfirm","confirmLabel","cancelLabel","Loading","isLoading","getXSRFToken","tokenInput","document","getElementById","isNil","value","Articles","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","moduleId","match","params","loadingMessage","articles","loadArticles","_this2","setState","fetch","concat","method","credentials","then","res","json","result","catch","error","console","log","_this3","headers","Accept","Content-Type","RequestVerificationToken","body","JSON","stringify","_this4","map","article","index","dialogId","key","dateUpdated","Link","to","articleId","href","e","preventDefault","data-toggle","data-target","confirmdialog","handleDelete","loading","scope","renderArticles","Component","SingleInput","classInput","displayError","htmlFor","name","onChange","handleChange","Message","handleClick","bind","assertThisInitialized","handleClose","display","messages","nextProps","event","undefined","length","Article","handleSubmit","closeErrorMessage","closeSuccessMessage","articleContent","imageUrl","articleOrder","errors","displaySuccess","displayErrors","fetchArticle","data","_this$setState","target","checked","defineProperty","newState","articleTitle","message_Message","onSubmit","singleinput","ckeditor_default","editor","ClassicEditor","getData","Routes","Switch","Route","exact","path","component","App","routes_Routes","Boolean","window","location","hostname","ReactDOM","render","BrowserRouter","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c007f22f.chunk.js","sourcesContent":["import React from 'react';\n\nconst ConfirmDialog = (props) => {\n    return (\n        <div className=\"modal fade\" id={props.id} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"ModalLabel\" aria-hidden=\"true\">\n            <div className=\"modal-dialog modal-dialog-centered\" role=\"document\">\n                <div className=\"modal-content text-white bg-dark\">\n                <div className=\"modal-header\">\n                    <h5 className=\"modal-title\" id=\"ModalLabel\">{props.title}</h5>\n                    <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                </div>\n                <div className=\"modal-body\">\n                    {props.message}\n                </div>\n                <div className=\"modal-footer\">\n                    <button type=\"button\" onClick={props.onConfirm} className=\"btn btn-outline-info\" data-dismiss=\"modal\">{props.confirmLabel}</button>\n                    <button type=\"button\" className=\"btn btn-outline-info\" data-dismiss=\"modal\">{props.cancelLabel}</button>\n                </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default ConfirmDialog;","import React from 'react';\n\nconst Loading = (props) => {\n\n    if(!props.isLoading) {\n        return (null);\n    }\n\n    return (\n        <div id=\"loader-component\">\n            <div className=\"loader-content\">\n                <div className=\"loader\">\n                    <div className=\"inner one\"></div>\n                    <div className=\"inner two\"></div>\n                    <div className=\"inner three\"></div>\n                </div>\n                <p className=\"message\">{props.message}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Loading;","import { isNil } from 'lodash'\n\nexport const getXSRFToken = () => {\n    const tokenInput = document.getElementById('RequestVerificationToken');\n    if(!isNil(tokenInput)) {\n        return tokenInput.value;\n    }\n\n    return 'empty';\n}","import React, {Component} from 'react';\nimport { Link } from 'react-router-dom';\nimport ConfirmDialog from '../components/confirmdialog';\nimport Loading from '../components/loading'\nimport { getXSRFToken } from '../utils';\n\nclass Articles extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            moduleId: props.match.params.moduleId || 0,\n            isLoading: false,\n            loadingMessage: '',\n            articles: []\n        };\n    }\n\n    componentDidMount() {\n        this.loadArticles();\n    }\n\n    loadArticles() {\n        this.setState({ isLoading: true, loadingMessage: 'Loading articles ...' });\n\n        fetch(`/article/list/${this.state.moduleId}`, \n        {\n            method: 'GET',\n            credentials: 'include'\n        })\n        .then(res => res.json())\n        .then(\n            (result) => {\n                this.setState({\n                    articles: result,\n                    isLoading: false\n                });\n            }\n        ).catch(function(error) {\n            this.setState({ isLoading: false });\n            console.log('Error: \\n', error);\n        });\n    }\n\n    handleDelete(id) {\n        this.setState({ isLoading: true, loadingMessage: 'Deleting article ...' });\n\n        fetch('/article/delete', \n        {\n            method: 'DELETE',\n            credentials: 'include',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'RequestVerificationToken' : getXSRFToken()\n            },\n            body: JSON.stringify(id)\n        })\n        .then(\n            () => {\n                this.loadArticles();\n            }\n        ).catch(function(error) {\n            this.setState({ isLoading: false });\n            console.log('Error: \\n', error);\n        });\n    }\n\n    renderArticles() {\n        return this.state.articles.map((article, index) => {\n            const dialogId = `dialog-${index}`;\n            return (\n                <tr key={index}>\n                    <td>{article.title}</td>\n                    <td>{article.dateUpdated}</td>\n                    <td><Link to={`/admin/module/settings/${this.state.moduleId}/settings/article/${article.articleId}`}><span className=\"ion-compose\"></span></Link></td>\n                    <td>\n                        <a href=\"\" onClick={(e) => e.preventDefault()} data-toggle=\"modal\" data-target={`#${dialogId}`}><span className=\"ion-trash-a\"></span></a>\n                        <ConfirmDialog id={dialogId} \n                            title=\"Delete article\"\n                            message={`Are you sure that you want to delete the article ${article.title} ?`}\n                            onConfirm={() => this.handleDelete(article.articleId)}\n                            confirmLabel=\"Delete\"\n                            cancelLabel=\"Cancel\" />\n                    </td>\n                </tr>\n            );\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"text-white m-sm-5 p-5 bg-dark clearfix\">\n                <Loading isLoading={this.state.isLoading} message={this.state.loadingMessage} />\n                <h2 className=\"mb-5 text-center\">Articles</h2>\n                <Link to={`/admin/module/settings/${this.state.moduleId}/settings/article/`} className=\"btn btn-outline-info mb-4\">New</Link>\n                <table className=\"table table-dark bg-dark\">\n                    <thead>\n                        <tr>\n                            <th scope=\"col\">Name</th>\n                            <th scope=\"col\">Date</th>\n                            <th scope=\"col\">Edit</th>\n                            <th scope=\"col\">Delete</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.renderArticles()}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default Articles;","import React from 'react';\n\nconst SingleInput = (props) => {\n    const classInput = props.displayError ? 'form-control border-danger' : 'form-control';\n\n        return (\n            <div className=\"form-group row\">\n                <label htmlFor={props.name} className=\"col-sm-2 col-form-label\">{props.title}</label>\n                <div className=\"col-sm-10\">\n                    <input id={props.name} className={classInput} type={props.type} name={props.name} value={props.value} onChange={props.handleChange} />\n                </div>\n            </div>\n        );\n}\n\nexport default SingleInput;","import React, {Component} from 'react';\n\nexport default class Message extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.handleClick = this.handleClick.bind(this);\n        this.handleClose = props.handleClose.bind(this);\n\n        this.state = { display: false, message: '', messages: [] };\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({ display: nextProps.display, message: nextProps.message, messages: nextProps.messages });  \n    }\n\n    handleClick(event) {\n        this.setState({ display: false });\n        event.preventDefault();\n        this.handleClose();\n    }\n\n    render() {\n        let message;\n\n        if(this.state.messages !== undefined && this.state.messages.length > 0) {\n            message = (<ul>\n                {this.state.messages.map((message, index) => {\n                    return (\n                        <li key={index}>{message}</li>\n                    );\n                })}\n            </ul>);\n        } else {\n            message = this.state.message;\n        }\n\n        if(!this.state.display) {\n            return (null);\n        }\n\n        return (\n            <div className={`alert alert-${this.props.type} alert-dismissible fade show`} role=\"alert\">\n                {message}\n                <button type=\"button\" className=\"close\" onClick={this.handleClick} data-dismiss=\"alert\" aria-label=\"Close\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n        );\n    }\n}","import React, {Component} from 'react';\nimport SingleInput from '../components/singleinput';\nimport Message from '../components/message';\nimport { Link } from 'react-router-dom';\nimport Loading from '../components/loading'\nimport { getXSRFToken } from '../utils';\nimport CKEditor from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\n\nclass Article extends Component {\n    constructor(props) {\n        super(props);\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.closeErrorMessage = this.closeErrorMessage.bind(this);\n        this.closeSuccessMessage = this.closeSuccessMessage.bind(this);\n\n        this.state = {\n            articleId: props.match.params.articleId || 0,\n            moduleId: props.match.params.moduleId || 0,\n            title: '',\n            articleContent: '',\n            imageUrl: '',\n            articleOrder: 0,\n            errors: [],\n            displaySuccess: false,\n            displayErrors: false,\n            isLoading: false\n        };\n    }\n\n    componentDidMount() {\n        if (this.state.articleId > 0) {\n            this.fetchArticle();\n        }\n    }\n\n    fetchArticle() {\n        let data = {};\n        this.setState({ isLoading: true, loadingMessage: 'Loading article ...' });\n\n        fetch(`/article/get/${this.state.articleId}`, \n        {\n            method: 'GET',\n            credentials: 'include',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'RequestVerificationToken' : getXSRFToken()\n            }\n        })\n        .then(res => res.json())\n        .then(\n            (result) => {\n                data.title = result.title;\n                data.articleContent = result.articleContent;\n                data.imageUrl = result.imageUrl;\n                data.articleOrder = result.articleOrder;\n                data.isLoading = false;\n\n                this.setState(data);\n            }\n        ).catch(function(error) {\n            this.setState({ isLoading: false });\n            console.log('Error: \\n', error);\n        });\n    }\n\n    handleChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        \n        this.setState({\n            [name]: value,\n            displaySuccess: false\n        });\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n\n        let newState = {};\n        let data = {};\n        data.articleId = this.state.articleId;\n        data.title = this.state.title;\n        data.articleContent = this.state.articleContent;\n        data.imageUrl = this.state.imageUrl;\n        data.articleOrder = this.state.articleOrder;\n        data.moduleId = this.state.moduleId;\n\n        this.setState({isLoading: true, loadingMessage: 'Saving article ...'});\n\n        fetch(`/article/update`, \n        {\n            method: 'POST',\n            credentials: 'include',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'RequestVerificationToken' : getXSRFToken()\n            },\n            body: JSON.stringify(data)\n        })\n        .then(res => res.json())\n        .then((result) => {\n                newState.displayErrors = false;\n                newState.displaySuccess = true;\n                newState.isLoading = false;\n                newState.articleId = result.articleId;\n\n                this.setState(newState, this.fetchArticle());\n            }\n        ).catch(function(error) {\n            this.setState({ isLoading: false });\n            console.log('Error: \\n', error);\n        });\n    }\n\n    closeSuccessMessage() {\n        this.setState({ displaySuccess: false });\n    }\n\n    closeErrorMessage() {\n        this.setState({ displayErrors: false });\n    }\n\n    render() {\n        const articleTitle = (this.state.articleId > 0) ? `Edit article : ${this.state.title}` : 'New article';\n        return (\n            <div className=\"text-white m-sm-5 p-5 bg-dark clearfix\">\n                <Link to={`/admin/module/settings/${this.state.moduleId}/settings`} className=\"btn btn-outline-info mb-4\">Back</Link>\n                <Loading isLoading={this.state.isLoading} message={this.state.loadingMessage} />\n                <h4 className=\"text-center\">Edit the article</h4>\n                <hr/>\n                <h2 className=\"mb-5 text-center\">{articleTitle}</h2>\n\n                <Message display={this.state.displaySuccess} handleClose={this.closeSuccessMessage} type=\"success\" message=\"Article updated with success\" />\n                <Message display={this.state.displayErrors} handleClose={this.closeErrorMessage} type=\"danger\" messages={this.state.errors} />\n\n                <form onSubmit={this.handleSubmit}>\n                    <SingleInput type=\"text\" handleChange={this.handleChange} title=\"Title\" name=\"title\" value={this.state.title} />\n                    \n                    <div className=\"form-group row\">\n                        <label htmlFor=\"articleContent\" className=\"col-sm-2 col-form-label\">Content</label>\n                        <div className=\"col-sm-10\">\n                            <CKEditor\n                                editor={ ClassicEditor }\n                                data={this.state.articleContent}\n                                onChange={ ( event, editor ) => {\n                                    const data = editor.getData();\n                                    this.setState({ articleContent: data });\n                                } }\n                            />                        \n                        </div>\n                    </div>\n                    <SingleInput type=\"text\" handleChange={this.handleChange} title=\"Image url\" name=\"imageUrl\" value={this.state.imageUrl} />\n                    <SingleInput type=\"text\" handleChange={this.handleChange} title=\"Order\" name=\"articleOrder\" value={this.state.articleOrder} />\n                    \n                    <button className=\"btn btn-outline-info mt-5 float-right\" type=\"submit\">Valid</button>\n                </form>\n            </div>\n        );\n    }\n}\n\nexport default Article;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom'\nimport Articles from './views/articles';\nimport Article from './views/article';\n\nexport const Routes = () => (\n  <Switch>\n    <Route exact path='/admin/module/settings/:moduleId/settings' component={Articles}/>\n    <Route path='/admin/module/settings/:moduleId/settings/article/:articleId?' component={Article}/>\n  </Switch>\n)","import React, { Component } from 'react';\nimport { Routes } from './routes';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport 'bootstrap/dist/js/bootstrap.js'\nimport './App.css';\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <div className=\"module-article\">\n        <Routes />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('module-article'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}